// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: domain/signup.proto

package domain

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommunicationPreference int32

const (
	CommunicationPreference_COMMUNICATION_PREFERENCE_EMAIL     CommunicationPreference = 0
	CommunicationPreference_COMMUNICATION_PREFERENCE_PHONE     CommunicationPreference = 1
	CommunicationPreference_COMMUNICATION_PREFERENCE_SNAILMAIL CommunicationPreference = 2
	CommunicationPreference_COMMUNICATION_PREFERENCE_PERSONAL  CommunicationPreference = 3
	CommunicationPreference_COMMUNICATION_PREFERENCE_HTP       CommunicationPreference = 4
)

// Enum value maps for CommunicationPreference.
var (
	CommunicationPreference_name = map[int32]string{
		0: "COMMUNICATION_PREFERENCE_EMAIL",
		1: "COMMUNICATION_PREFERENCE_PHONE",
		2: "COMMUNICATION_PREFERENCE_SNAILMAIL",
		3: "COMMUNICATION_PREFERENCE_PERSONAL",
		4: "COMMUNICATION_PREFERENCE_HTP",
	}
	CommunicationPreference_value = map[string]int32{
		"COMMUNICATION_PREFERENCE_EMAIL":     0,
		"COMMUNICATION_PREFERENCE_PHONE":     1,
		"COMMUNICATION_PREFERENCE_SNAILMAIL": 2,
		"COMMUNICATION_PREFERENCE_PERSONAL":  3,
		"COMMUNICATION_PREFERENCE_HTP":       4,
	}
)

func (x CommunicationPreference) Enum() *CommunicationPreference {
	p := new(CommunicationPreference)
	*p = x
	return p
}

func (x CommunicationPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommunicationPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_signup_proto_enumTypes[0].Descriptor()
}

func (CommunicationPreference) Type() protoreflect.EnumType {
	return &file_domain_signup_proto_enumTypes[0]
}

func (x CommunicationPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommunicationPreference.Descriptor instead.
func (CommunicationPreference) EnumDescriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{0}
}

type PaymentOptionType int32

const (
	PaymentOptionType_PAYMENT_OPTION_TYPE_CREDIT_CARD   PaymentOptionType = 0
	PaymentOptionType_PAYMENT_OPTION_TYPE_BANK_TRANSFER PaymentOptionType = 1
	PaymentOptionType_PAYMENT_OPTION_TYPE_BANK_ACCOUNT  PaymentOptionType = 2
)

// Enum value maps for PaymentOptionType.
var (
	PaymentOptionType_name = map[int32]string{
		0: "PAYMENT_OPTION_TYPE_CREDIT_CARD",
		1: "PAYMENT_OPTION_TYPE_BANK_TRANSFER",
		2: "PAYMENT_OPTION_TYPE_BANK_ACCOUNT",
	}
	PaymentOptionType_value = map[string]int32{
		"PAYMENT_OPTION_TYPE_CREDIT_CARD":   0,
		"PAYMENT_OPTION_TYPE_BANK_TRANSFER": 1,
		"PAYMENT_OPTION_TYPE_BANK_ACCOUNT":  2,
	}
)

func (x PaymentOptionType) Enum() *PaymentOptionType {
	p := new(PaymentOptionType)
	*p = x
	return p
}

func (x PaymentOptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentOptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_signup_proto_enumTypes[1].Descriptor()
}

func (PaymentOptionType) Type() protoreflect.EnumType {
	return &file_domain_signup_proto_enumTypes[1]
}

func (x PaymentOptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentOptionType.Descriptor instead.
func (PaymentOptionType) EnumDescriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{1}
}

type SignupReason int32

const (
	SignupReason_SIGNUP_REASON_CHANGE_OF_SUPPLIER       SignupReason = 0
	SignupReason_SIGNUP_REASON_MOVING_IN                SignupReason = 1
	SignupReason_SIGNUP_REASON_FROM_SUBSTITUTE_DELIVERY SignupReason = 2
)

// Enum value maps for SignupReason.
var (
	SignupReason_name = map[int32]string{
		0: "SIGNUP_REASON_CHANGE_OF_SUPPLIER",
		1: "SIGNUP_REASON_MOVING_IN",
		2: "SIGNUP_REASON_FROM_SUBSTITUTE_DELIVERY",
	}
	SignupReason_value = map[string]int32{
		"SIGNUP_REASON_CHANGE_OF_SUPPLIER":       0,
		"SIGNUP_REASON_MOVING_IN":                1,
		"SIGNUP_REASON_FROM_SUBSTITUTE_DELIVERY": 2,
	}
)

func (x SignupReason) Enum() *SignupReason {
	p := new(SignupReason)
	*p = x
	return p
}

func (x SignupReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignupReason) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_signup_proto_enumTypes[2].Descriptor()
}

func (SignupReason) Type() protoreflect.EnumType {
	return &file_domain_signup_proto_enumTypes[2]
}

func (x SignupReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignupReason.Descriptor instead.
func (SignupReason) EnumDescriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{2}
}

type SignupServiceType int32

const (
	SignupServiceType_SIGNUP_SERVICE_TYPE_POWER SignupServiceType = 0
	SignupServiceType_SIGNUP_SERVICE_TYPE_GAS   SignupServiceType = 1
	SignupServiceType_SIGNUP_SERVICE_TYPE_WATER SignupServiceType = 2
)

// Enum value maps for SignupServiceType.
var (
	SignupServiceType_name = map[int32]string{
		0: "SIGNUP_SERVICE_TYPE_POWER",
		1: "SIGNUP_SERVICE_TYPE_GAS",
		2: "SIGNUP_SERVICE_TYPE_WATER",
	}
	SignupServiceType_value = map[string]int32{
		"SIGNUP_SERVICE_TYPE_POWER": 0,
		"SIGNUP_SERVICE_TYPE_GAS":   1,
		"SIGNUP_SERVICE_TYPE_WATER": 2,
	}
)

func (x SignupServiceType) Enum() *SignupServiceType {
	p := new(SignupServiceType)
	*p = x
	return p
}

func (x SignupServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignupServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_signup_proto_enumTypes[3].Descriptor()
}

func (SignupServiceType) Type() protoreflect.EnumType {
	return &file_domain_signup_proto_enumTypes[3]
}

func (x SignupServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignupServiceType.Descriptor instead.
func (SignupServiceType) EnumDescriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{3}
}

type MeterSize int32

const (
	MeterSize_METER_SIZE_UNKNOWN              MeterSize = 0
	MeterSize_METER_SIZE_DSL_KOM              MeterSize = 1
	MeterSize_METER_SIZE_EINTARIF             MeterSize = 2
	MeterSize_METER_SIZE_ETHERNET_KOM         MeterSize = 3
	MeterSize_METER_SIZE_GAS_G10              MeterSize = 4
	MeterSize_METER_SIZE_GAS_G100             MeterSize = 5
	MeterSize_METER_SIZE_GAS_G1000            MeterSize = 6
	MeterSize_METER_SIZE_GAS_G10000           MeterSize = 7
	MeterSize_METER_SIZE_GAS_G12500           MeterSize = 8
	MeterSize_METER_SIZE_GAS_G16              MeterSize = 9
	MeterSize_METER_SIZE_GAS_G160             MeterSize = 10
	MeterSize_METER_SIZE_GAS_G1600            MeterSize = 11
	MeterSize_METER_SIZE_GAS_G16000           MeterSize = 12
	MeterSize_METER_SIZE_GAS_G25              MeterSize = 13
	MeterSize_METER_SIZE_GAS_G250             MeterSize = 14
	MeterSize_METER_SIZE_GAS_G2500            MeterSize = 15
	MeterSize_METER_SIZE_GAS_G2P5             MeterSize = 16
	MeterSize_METER_SIZE_GAS_G350             MeterSize = 17
	MeterSize_METER_SIZE_GAS_G4               MeterSize = 18
	MeterSize_METER_SIZE_GAS_G40              MeterSize = 19
	MeterSize_METER_SIZE_GAS_G400             MeterSize = 20
	MeterSize_METER_SIZE_GAS_G4000            MeterSize = 21
	MeterSize_METER_SIZE_GAS_G6               MeterSize = 22
	MeterSize_METER_SIZE_GAS_G65              MeterSize = 23
	MeterSize_METER_SIZE_GAS_G650             MeterSize = 24
	MeterSize_METER_SIZE_GAS_G6500            MeterSize = 25
	MeterSize_METER_SIZE_IMPULSGEBER_G100     MeterSize = 26
	MeterSize_METER_SIZE_IMPULSGEBER_G4_G100  MeterSize = 27
	MeterSize_METER_SIZE_KOMPAKT_MU           MeterSize = 28
	MeterSize_METER_SIZE_LTE_KOM              MeterSize = 29
	MeterSize_METER_SIZE_MEHRTARIF            MeterSize = 30
	MeterSize_METER_SIZE_MODEM_FESTNETZ       MeterSize = 31
	MeterSize_METER_SIZE_MODEM_FUNK           MeterSize = 32
	MeterSize_METER_SIZE_MODEM_GPRS           MeterSize = 33
	MeterSize_METER_SIZE_MODEM_GPRS_M_LG      MeterSize = 34
	MeterSize_METER_SIZE_MODEM_GSM            MeterSize = 35
	MeterSize_METER_SIZE_MODEM_GSM_M_LG       MeterSize = 36
	MeterSize_METER_SIZE_MODEM_GSM_O_LG       MeterSize = 37
	MeterSize_METER_SIZE_PLC_COM              MeterSize = 38
	MeterSize_METER_SIZE_RUNDSTEUEREMPFAENGER MeterSize = 39
	MeterSize_METER_SIZE_SYSTEM_MU            MeterSize = 40
	MeterSize_METER_SIZE_TARIFSCHALTGERAET    MeterSize = 41
	MeterSize_METER_SIZE_TEMPERATUR_MU        MeterSize = 42
	MeterSize_METER_SIZE_UNBESTIMMT           MeterSize = 43
	MeterSize_METER_SIZE_WASSER_MWZW          MeterSize = 44
	MeterSize_METER_SIZE_WASSER_VWZ04         MeterSize = 45
	MeterSize_METER_SIZE_WASSER_VWZ05         MeterSize = 46
	MeterSize_METER_SIZE_WASSER_VWZ06         MeterSize = 47
	MeterSize_METER_SIZE_WASSER_VWZ07         MeterSize = 48
	MeterSize_METER_SIZE_WASSER_VWZ10         MeterSize = 49
	MeterSize_METER_SIZE_WASSER_WZ01          MeterSize = 50
	MeterSize_METER_SIZE_WASSER_WZ02          MeterSize = 51
	MeterSize_METER_SIZE_WASSER_WZ03          MeterSize = 52
	MeterSize_METER_SIZE_WASSER_WZ04          MeterSize = 53
	MeterSize_METER_SIZE_WASSER_WZ05          MeterSize = 54
	MeterSize_METER_SIZE_WASSER_WZ06          MeterSize = 55
	MeterSize_METER_SIZE_WASSER_WZ07          MeterSize = 56
	MeterSize_METER_SIZE_WASSER_WZ08          MeterSize = 57
	MeterSize_METER_SIZE_WASSER_WZ09          MeterSize = 58
	MeterSize_METER_SIZE_WASSER_WZ10          MeterSize = 59
	MeterSize_METER_SIZE_WASSER_WZWW          MeterSize = 60
	MeterSize_METER_SIZE_ZUSTANDS_MU          MeterSize = 61
	MeterSize_METER_SIZE_ZWEITARIF            MeterSize = 62
)

// Enum value maps for MeterSize.
var (
	MeterSize_name = map[int32]string{
		0:  "METER_SIZE_UNKNOWN",
		1:  "METER_SIZE_DSL_KOM",
		2:  "METER_SIZE_EINTARIF",
		3:  "METER_SIZE_ETHERNET_KOM",
		4:  "METER_SIZE_GAS_G10",
		5:  "METER_SIZE_GAS_G100",
		6:  "METER_SIZE_GAS_G1000",
		7:  "METER_SIZE_GAS_G10000",
		8:  "METER_SIZE_GAS_G12500",
		9:  "METER_SIZE_GAS_G16",
		10: "METER_SIZE_GAS_G160",
		11: "METER_SIZE_GAS_G1600",
		12: "METER_SIZE_GAS_G16000",
		13: "METER_SIZE_GAS_G25",
		14: "METER_SIZE_GAS_G250",
		15: "METER_SIZE_GAS_G2500",
		16: "METER_SIZE_GAS_G2P5",
		17: "METER_SIZE_GAS_G350",
		18: "METER_SIZE_GAS_G4",
		19: "METER_SIZE_GAS_G40",
		20: "METER_SIZE_GAS_G400",
		21: "METER_SIZE_GAS_G4000",
		22: "METER_SIZE_GAS_G6",
		23: "METER_SIZE_GAS_G65",
		24: "METER_SIZE_GAS_G650",
		25: "METER_SIZE_GAS_G6500",
		26: "METER_SIZE_IMPULSGEBER_G100",
		27: "METER_SIZE_IMPULSGEBER_G4_G100",
		28: "METER_SIZE_KOMPAKT_MU",
		29: "METER_SIZE_LTE_KOM",
		30: "METER_SIZE_MEHRTARIF",
		31: "METER_SIZE_MODEM_FESTNETZ",
		32: "METER_SIZE_MODEM_FUNK",
		33: "METER_SIZE_MODEM_GPRS",
		34: "METER_SIZE_MODEM_GPRS_M_LG",
		35: "METER_SIZE_MODEM_GSM",
		36: "METER_SIZE_MODEM_GSM_M_LG",
		37: "METER_SIZE_MODEM_GSM_O_LG",
		38: "METER_SIZE_PLC_COM",
		39: "METER_SIZE_RUNDSTEUEREMPFAENGER",
		40: "METER_SIZE_SYSTEM_MU",
		41: "METER_SIZE_TARIFSCHALTGERAET",
		42: "METER_SIZE_TEMPERATUR_MU",
		43: "METER_SIZE_UNBESTIMMT",
		44: "METER_SIZE_WASSER_MWZW",
		45: "METER_SIZE_WASSER_VWZ04",
		46: "METER_SIZE_WASSER_VWZ05",
		47: "METER_SIZE_WASSER_VWZ06",
		48: "METER_SIZE_WASSER_VWZ07",
		49: "METER_SIZE_WASSER_VWZ10",
		50: "METER_SIZE_WASSER_WZ01",
		51: "METER_SIZE_WASSER_WZ02",
		52: "METER_SIZE_WASSER_WZ03",
		53: "METER_SIZE_WASSER_WZ04",
		54: "METER_SIZE_WASSER_WZ05",
		55: "METER_SIZE_WASSER_WZ06",
		56: "METER_SIZE_WASSER_WZ07",
		57: "METER_SIZE_WASSER_WZ08",
		58: "METER_SIZE_WASSER_WZ09",
		59: "METER_SIZE_WASSER_WZ10",
		60: "METER_SIZE_WASSER_WZWW",
		61: "METER_SIZE_ZUSTANDS_MU",
		62: "METER_SIZE_ZWEITARIF",
	}
	MeterSize_value = map[string]int32{
		"METER_SIZE_UNKNOWN":              0,
		"METER_SIZE_DSL_KOM":              1,
		"METER_SIZE_EINTARIF":             2,
		"METER_SIZE_ETHERNET_KOM":         3,
		"METER_SIZE_GAS_G10":              4,
		"METER_SIZE_GAS_G100":             5,
		"METER_SIZE_GAS_G1000":            6,
		"METER_SIZE_GAS_G10000":           7,
		"METER_SIZE_GAS_G12500":           8,
		"METER_SIZE_GAS_G16":              9,
		"METER_SIZE_GAS_G160":             10,
		"METER_SIZE_GAS_G1600":            11,
		"METER_SIZE_GAS_G16000":           12,
		"METER_SIZE_GAS_G25":              13,
		"METER_SIZE_GAS_G250":             14,
		"METER_SIZE_GAS_G2500":            15,
		"METER_SIZE_GAS_G2P5":             16,
		"METER_SIZE_GAS_G350":             17,
		"METER_SIZE_GAS_G4":               18,
		"METER_SIZE_GAS_G40":              19,
		"METER_SIZE_GAS_G400":             20,
		"METER_SIZE_GAS_G4000":            21,
		"METER_SIZE_GAS_G6":               22,
		"METER_SIZE_GAS_G65":              23,
		"METER_SIZE_GAS_G650":             24,
		"METER_SIZE_GAS_G6500":            25,
		"METER_SIZE_IMPULSGEBER_G100":     26,
		"METER_SIZE_IMPULSGEBER_G4_G100":  27,
		"METER_SIZE_KOMPAKT_MU":           28,
		"METER_SIZE_LTE_KOM":              29,
		"METER_SIZE_MEHRTARIF":            30,
		"METER_SIZE_MODEM_FESTNETZ":       31,
		"METER_SIZE_MODEM_FUNK":           32,
		"METER_SIZE_MODEM_GPRS":           33,
		"METER_SIZE_MODEM_GPRS_M_LG":      34,
		"METER_SIZE_MODEM_GSM":            35,
		"METER_SIZE_MODEM_GSM_M_LG":       36,
		"METER_SIZE_MODEM_GSM_O_LG":       37,
		"METER_SIZE_PLC_COM":              38,
		"METER_SIZE_RUNDSTEUEREMPFAENGER": 39,
		"METER_SIZE_SYSTEM_MU":            40,
		"METER_SIZE_TARIFSCHALTGERAET":    41,
		"METER_SIZE_TEMPERATUR_MU":        42,
		"METER_SIZE_UNBESTIMMT":           43,
		"METER_SIZE_WASSER_MWZW":          44,
		"METER_SIZE_WASSER_VWZ04":         45,
		"METER_SIZE_WASSER_VWZ05":         46,
		"METER_SIZE_WASSER_VWZ06":         47,
		"METER_SIZE_WASSER_VWZ07":         48,
		"METER_SIZE_WASSER_VWZ10":         49,
		"METER_SIZE_WASSER_WZ01":          50,
		"METER_SIZE_WASSER_WZ02":          51,
		"METER_SIZE_WASSER_WZ03":          52,
		"METER_SIZE_WASSER_WZ04":          53,
		"METER_SIZE_WASSER_WZ05":          54,
		"METER_SIZE_WASSER_WZ06":          55,
		"METER_SIZE_WASSER_WZ07":          56,
		"METER_SIZE_WASSER_WZ08":          57,
		"METER_SIZE_WASSER_WZ09":          58,
		"METER_SIZE_WASSER_WZ10":          59,
		"METER_SIZE_WASSER_WZWW":          60,
		"METER_SIZE_ZUSTANDS_MU":          61,
		"METER_SIZE_ZWEITARIF":            62,
	}
)

func (x MeterSize) Enum() *MeterSize {
	p := new(MeterSize)
	*p = x
	return p
}

func (x MeterSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeterSize) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_signup_proto_enumTypes[4].Descriptor()
}

func (MeterSize) Type() protoreflect.EnumType {
	return &file_domain_signup_proto_enumTypes[4]
}

func (x MeterSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeterSize.Descriptor instead.
func (MeterSize) EnumDescriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{4}
}

type Signup struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SignupMeta       *SignupMeta            `protobuf:"bytes,1,opt,name=signup_meta,json=signupMeta,proto3" json:"signup_meta,omitempty"`
	CustomerPersonal *CustomerPersonal      `protobuf:"bytes,2,opt,name=customer_personal,json=customerPersonal,proto3" json:"customer_personal,omitempty"`
	CustomerContact  *CustomerContact       `protobuf:"bytes,3,opt,name=customer_contact,json=customerContact,proto3" json:"customer_contact,omitempty"`
	DeliveryAddress  *Address               `protobuf:"bytes,4,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	BillingDetails   *BillingDetails        `protobuf:"bytes,5,opt,name=billing_details,json=billingDetails,proto3" json:"billing_details,omitempty"`
	SubscriptionInfo []*SubscriptionInfo    `protobuf:"bytes,6,rep,name=subscription_info,json=subscriptionInfo,proto3" json:"subscription_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Signup) Reset() {
	*x = Signup{}
	mi := &file_domain_signup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signup) ProtoMessage() {}

func (x *Signup) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signup.ProtoReflect.Descriptor instead.
func (*Signup) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{0}
}

func (x *Signup) GetSignupMeta() *SignupMeta {
	if x != nil {
		return x.SignupMeta
	}
	return nil
}

func (x *Signup) GetCustomerPersonal() *CustomerPersonal {
	if x != nil {
		return x.CustomerPersonal
	}
	return nil
}

func (x *Signup) GetCustomerContact() *CustomerContact {
	if x != nil {
		return x.CustomerContact
	}
	return nil
}

func (x *Signup) GetDeliveryAddress() *Address {
	if x != nil {
		return x.DeliveryAddress
	}
	return nil
}

func (x *Signup) GetBillingDetails() *BillingDetails {
	if x != nil {
		return x.BillingDetails
	}
	return nil
}

func (x *Signup) GetSubscriptionInfo() []*SubscriptionInfo {
	if x != nil {
		return x.SubscriptionInfo
	}
	return nil
}

type AddAService struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SignupMeta       *SignupMeta            `protobuf:"bytes,1,opt,name=signup_meta,json=signupMeta,proto3" json:"signup_meta,omitempty"`
	CustomerPersonal *CustomerPersonal      `protobuf:"bytes,2,opt,name=customer_personal,json=customerPersonal,proto3" json:"customer_personal,omitempty"`
	CustomerContact  *CustomerContact       `protobuf:"bytes,3,opt,name=customer_contact,json=customerContact,proto3" json:"customer_contact,omitempty"`
	DeliveryAddress  *Address               `protobuf:"bytes,4,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	BillingDetails   *BillingDetails        `protobuf:"bytes,5,opt,name=billing_details,json=billingDetails,proto3" json:"billing_details,omitempty"`
	SubscriptionInfo []*SubscriptionInfo    `protobuf:"bytes,6,rep,name=subscription_info,json=subscriptionInfo,proto3" json:"subscription_info,omitempty"`
	CustomerId       string                 `protobuf:"bytes,7,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerOuid     string                 `protobuf:"bytes,8,opt,name=customer_ouid,json=customerOuid,proto3" json:"customer_ouid,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddAService) Reset() {
	*x = AddAService{}
	mi := &file_domain_signup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAService) ProtoMessage() {}

func (x *AddAService) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAService.ProtoReflect.Descriptor instead.
func (*AddAService) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{1}
}

func (x *AddAService) GetSignupMeta() *SignupMeta {
	if x != nil {
		return x.SignupMeta
	}
	return nil
}

func (x *AddAService) GetCustomerPersonal() *CustomerPersonal {
	if x != nil {
		return x.CustomerPersonal
	}
	return nil
}

func (x *AddAService) GetCustomerContact() *CustomerContact {
	if x != nil {
		return x.CustomerContact
	}
	return nil
}

func (x *AddAService) GetDeliveryAddress() *Address {
	if x != nil {
		return x.DeliveryAddress
	}
	return nil
}

func (x *AddAService) GetBillingDetails() *BillingDetails {
	if x != nil {
		return x.BillingDetails
	}
	return nil
}

func (x *AddAService) GetSubscriptionInfo() []*SubscriptionInfo {
	if x != nil {
		return x.SubscriptionInfo
	}
	return nil
}

func (x *AddAService) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *AddAService) GetCustomerOuid() string {
	if x != nil {
		return x.CustomerOuid
	}
	return ""
}

type Move struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SignupMeta         *SignupMeta            `protobuf:"bytes,1,opt,name=signup_meta,json=signupMeta,proto3" json:"signup_meta,omitempty"`
	CustomerPersonal   *CustomerPersonal      `protobuf:"bytes,2,opt,name=customer_personal,json=customerPersonal,proto3" json:"customer_personal,omitempty"`
	CustomerContact    *CustomerContact       `protobuf:"bytes,3,opt,name=customer_contact,json=customerContact,proto3" json:"customer_contact,omitempty"`
	DeliveryAddress    *Address               `protobuf:"bytes,4,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	BillingDetails     *BillingDetails        `protobuf:"bytes,5,opt,name=billing_details,json=billingDetails,proto3" json:"billing_details,omitempty"`
	SubscriptionInfo   []*SubscriptionInfo    `protobuf:"bytes,6,rep,name=subscription_info,json=subscriptionInfo,proto3" json:"subscription_info,omitempty"`
	CustomerId         string                 `protobuf:"bytes,7,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerOuid       string                 `protobuf:"bytes,8,opt,name=customer_ouid,json=customerOuid,proto3" json:"customer_ouid,omitempty"`
	MbaToTerminate     string                 `protobuf:"bytes,9,opt,name=mba_to_terminate,json=mbaToTerminate,proto3" json:"mba_to_terminate,omitempty"`
	MbaOuidToTerminate string                 `protobuf:"bytes,10,opt,name=mba_ouid_to_terminate,json=mbaOuidToTerminate,proto3" json:"mba_ouid_to_terminate,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Move) Reset() {
	*x = Move{}
	mi := &file_domain_signup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Move) ProtoMessage() {}

func (x *Move) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Move.ProtoReflect.Descriptor instead.
func (*Move) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{2}
}

func (x *Move) GetSignupMeta() *SignupMeta {
	if x != nil {
		return x.SignupMeta
	}
	return nil
}

func (x *Move) GetCustomerPersonal() *CustomerPersonal {
	if x != nil {
		return x.CustomerPersonal
	}
	return nil
}

func (x *Move) GetCustomerContact() *CustomerContact {
	if x != nil {
		return x.CustomerContact
	}
	return nil
}

func (x *Move) GetDeliveryAddress() *Address {
	if x != nil {
		return x.DeliveryAddress
	}
	return nil
}

func (x *Move) GetBillingDetails() *BillingDetails {
	if x != nil {
		return x.BillingDetails
	}
	return nil
}

func (x *Move) GetSubscriptionInfo() []*SubscriptionInfo {
	if x != nil {
		return x.SubscriptionInfo
	}
	return nil
}

func (x *Move) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Move) GetCustomerOuid() string {
	if x != nil {
		return x.CustomerOuid
	}
	return ""
}

func (x *Move) GetMbaToTerminate() string {
	if x != nil {
		return x.MbaToTerminate
	}
	return ""
}

func (x *Move) GetMbaOuidToTerminate() string {
	if x != nil {
		return x.MbaOuidToTerminate
	}
	return ""
}

type BillingDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PaymentOption *PaymentOption         `protobuf:"bytes,2,opt,name=payment_option,json=paymentOption,proto3" json:"payment_option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BillingDetails) Reset() {
	*x = BillingDetails{}
	mi := &file_domain_signup_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BillingDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingDetails) ProtoMessage() {}

func (x *BillingDetails) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingDetails.ProtoReflect.Descriptor instead.
func (*BillingDetails) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{3}
}

func (x *BillingDetails) GetPaymentOption() *PaymentOption {
	if x != nil {
		return x.PaymentOption
	}
	return nil
}

type PaymentOption struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PaymentOptionType PaymentOptionType      `protobuf:"varint,1,opt,name=payment_option_type,json=paymentOptionType,proto3,enum=domain.PaymentOptionType" json:"payment_option_type,omitempty"`
	// Types that are valid to be assigned to PaymentOption:
	//
	//	*PaymentOption_CreditCard
	//	*PaymentOption_BankTransfer
	//	*PaymentOption_BankAccount
	PaymentOption isPaymentOption_PaymentOption `protobuf_oneof:"payment_option"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentOption) Reset() {
	*x = PaymentOption{}
	mi := &file_domain_signup_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentOption) ProtoMessage() {}

func (x *PaymentOption) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentOption.ProtoReflect.Descriptor instead.
func (*PaymentOption) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentOption) GetPaymentOptionType() PaymentOptionType {
	if x != nil {
		return x.PaymentOptionType
	}
	return PaymentOptionType_PAYMENT_OPTION_TYPE_CREDIT_CARD
}

func (x *PaymentOption) GetPaymentOption() isPaymentOption_PaymentOption {
	if x != nil {
		return x.PaymentOption
	}
	return nil
}

func (x *PaymentOption) GetCreditCard() *CreditCard {
	if x != nil {
		if x, ok := x.PaymentOption.(*PaymentOption_CreditCard); ok {
			return x.CreditCard
		}
	}
	return nil
}

func (x *PaymentOption) GetBankTransfer() *BankTransfer {
	if x != nil {
		if x, ok := x.PaymentOption.(*PaymentOption_BankTransfer); ok {
			return x.BankTransfer
		}
	}
	return nil
}

func (x *PaymentOption) GetBankAccount() *BankAccount {
	if x != nil {
		if x, ok := x.PaymentOption.(*PaymentOption_BankAccount); ok {
			return x.BankAccount
		}
	}
	return nil
}

type isPaymentOption_PaymentOption interface {
	isPaymentOption_PaymentOption()
}

type PaymentOption_CreditCard struct {
	CreditCard *CreditCard `protobuf:"bytes,2,opt,name=credit_card,json=creditCard,proto3,oneof"`
}

type PaymentOption_BankTransfer struct {
	BankTransfer *BankTransfer `protobuf:"bytes,3,opt,name=bank_transfer,json=bankTransfer,proto3,oneof"`
}

type PaymentOption_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,4,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

func (*PaymentOption_CreditCard) isPaymentOption_PaymentOption() {}

func (*PaymentOption_BankTransfer) isPaymentOption_PaymentOption() {}

func (*PaymentOption_BankAccount) isPaymentOption_PaymentOption() {}

type CreditCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CardNumber    string                 `protobuf:"bytes,1,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CardHolder    string                 `protobuf:"bytes,2,opt,name=card_holder,json=cardHolder,proto3" json:"card_holder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditCard) Reset() {
	*x = CreditCard{}
	mi := &file_domain_signup_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCard) ProtoMessage() {}

func (x *CreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCard.ProtoReflect.Descriptor instead.
func (*CreditCard) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{5}
}

func (x *CreditCard) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *CreditCard) GetCardHolder() string {
	if x != nil {
		return x.CardHolder
	}
	return ""
}

type BankTransfer struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	WillPayByBankTransfer bool                   `protobuf:"varint,1,opt,name=will_pay_by_bank_transfer,json=willPayByBankTransfer,proto3" json:"will_pay_by_bank_transfer,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BankTransfer) Reset() {
	*x = BankTransfer{}
	mi := &file_domain_signup_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankTransfer) ProtoMessage() {}

func (x *BankTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankTransfer.ProtoReflect.Descriptor instead.
func (*BankTransfer) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{6}
}

func (x *BankTransfer) GetWillPayByBankTransfer() bool {
	if x != nil {
		return x.WillPayByBankTransfer
	}
	return false
}

type SignupMeta struct {
	state                   protoimpl.MessageState  `protogen:"open.v1"`
	SignupReason            SignupReason            `protobuf:"varint,1,opt,name=signup_reason,json=signupReason,proto3,enum=domain.SignupReason" json:"signup_reason,omitempty"`
	CommunicationOptIns     *CommunicationOptIns    `protobuf:"bytes,2,opt,name=communication_opt_ins,json=communicationOptIns,proto3" json:"communication_opt_ins,omitempty"`
	CommunicationPreference CommunicationPreference `protobuf:"varint,3,opt,name=communication_preference,json=communicationPreference,proto3,enum=domain.CommunicationPreference" json:"communication_preference,omitempty"`
	StartOfServiceDate      *Date                   `protobuf:"bytes,4,opt,name=start_of_service_date,json=startOfServiceDate,proto3" json:"start_of_service_date,omitempty"`
	MoveOutDate             *Date                   `protobuf:"bytes,5,opt,name=move_out_date,json=moveOutDate,proto3" json:"move_out_date,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SignupMeta) Reset() {
	*x = SignupMeta{}
	mi := &file_domain_signup_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignupMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupMeta) ProtoMessage() {}

func (x *SignupMeta) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupMeta.ProtoReflect.Descriptor instead.
func (*SignupMeta) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{7}
}

func (x *SignupMeta) GetSignupReason() SignupReason {
	if x != nil {
		return x.SignupReason
	}
	return SignupReason_SIGNUP_REASON_CHANGE_OF_SUPPLIER
}

func (x *SignupMeta) GetCommunicationOptIns() *CommunicationOptIns {
	if x != nil {
		return x.CommunicationOptIns
	}
	return nil
}

func (x *SignupMeta) GetCommunicationPreference() CommunicationPreference {
	if x != nil {
		return x.CommunicationPreference
	}
	return CommunicationPreference_COMMUNICATION_PREFERENCE_EMAIL
}

func (x *SignupMeta) GetStartOfServiceDate() *Date {
	if x != nil {
		return x.StartOfServiceDate
	}
	return nil
}

func (x *SignupMeta) GetMoveOutDate() *Date {
	if x != nil {
		return x.MoveOutDate
	}
	return nil
}

type CommunicationOptIns struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Smailmail     bool                   `protobuf:"varint,1,opt,name=smailmail,proto3" json:"smailmail,omitempty"`
	Phone         bool                   `protobuf:"varint,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Newsletter    bool                   `protobuf:"varint,3,opt,name=newsletter,proto3" json:"newsletter,omitempty"`
	Profiling     *bool                  `protobuf:"varint,4,opt,name=profiling,proto3,oneof" json:"profiling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommunicationOptIns) Reset() {
	*x = CommunicationOptIns{}
	mi := &file_domain_signup_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationOptIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationOptIns) ProtoMessage() {}

func (x *CommunicationOptIns) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommunicationOptIns.ProtoReflect.Descriptor instead.
func (*CommunicationOptIns) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{8}
}

func (x *CommunicationOptIns) GetSmailmail() bool {
	if x != nil {
		return x.Smailmail
	}
	return false
}

func (x *CommunicationOptIns) GetPhone() bool {
	if x != nil {
		return x.Phone
	}
	return false
}

func (x *CommunicationOptIns) GetNewsletter() bool {
	if x != nil {
		return x.Newsletter
	}
	return false
}

func (x *CommunicationOptIns) GetProfiling() bool {
	if x != nil && x.Profiling != nil {
		return *x.Profiling
	}
	return false
}

type SubscriptionInfo struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ServiceType                 SignupServiceType      `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=domain.SignupServiceType" json:"service_type,omitempty"`
	IsHtnt                      bool                   `protobuf:"varint,2,opt,name=is_htnt,json=isHtnt,proto3" json:"is_htnt,omitempty"`
	IsSmartMeter                bool                   `protobuf:"varint,3,opt,name=is_smart_meter,json=isSmartMeter,proto3" json:"is_smart_meter,omitempty"`
	ProductName                 string                 `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	IncludeWasteWater           bool                   `protobuf:"varint,5,opt,name=include_waste_water,json=includeWasteWater,proto3" json:"include_waste_water,omitempty"`
	SendTermination             bool                   `protobuf:"varint,6,opt,name=send_termination,json=sendTermination,proto3" json:"send_termination,omitempty"`
	StartOfServiceDate          *Date                  `protobuf:"bytes,7,opt,name=start_of_service_date,json=startOfServiceDate,proto3,oneof" json:"start_of_service_date,omitempty"`
	EstimatedConsumption        *int64                 `protobuf:"varint,8,opt,name=estimated_consumption,json=estimatedConsumption,proto3,oneof" json:"estimated_consumption,omitempty"`
	EstimatedConsumptionHtnt    *ConsumptionHTNT       `protobuf:"bytes,9,opt,name=estimated_consumption_htnt,json=estimatedConsumptionHtnt,proto3,oneof" json:"estimated_consumption_htnt,omitempty"`
	MeterInfo                   *SignupMeterInfo       `protobuf:"bytes,10,opt,name=meter_info,json=meterInfo,proto3" json:"meter_info,omitempty"`
	PreviousSupplier            *PreviousSupplier      `protobuf:"bytes,11,opt,name=previous_supplier,json=previousSupplier,proto3,oneof" json:"previous_supplier,omitempty"`
	ManualAbschlagAmountInCents int64                  `protobuf:"varint,12,opt,name=manual_abschlag_amount_in_cents,json=manualAbschlagAmountInCents,proto3" json:"manual_abschlag_amount_in_cents,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SubscriptionInfo) Reset() {
	*x = SubscriptionInfo{}
	mi := &file_domain_signup_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionInfo) ProtoMessage() {}

func (x *SubscriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionInfo.ProtoReflect.Descriptor instead.
func (*SubscriptionInfo) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{9}
}

func (x *SubscriptionInfo) GetServiceType() SignupServiceType {
	if x != nil {
		return x.ServiceType
	}
	return SignupServiceType_SIGNUP_SERVICE_TYPE_POWER
}

func (x *SubscriptionInfo) GetIsHtnt() bool {
	if x != nil {
		return x.IsHtnt
	}
	return false
}

func (x *SubscriptionInfo) GetIsSmartMeter() bool {
	if x != nil {
		return x.IsSmartMeter
	}
	return false
}

func (x *SubscriptionInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *SubscriptionInfo) GetIncludeWasteWater() bool {
	if x != nil {
		return x.IncludeWasteWater
	}
	return false
}

func (x *SubscriptionInfo) GetSendTermination() bool {
	if x != nil {
		return x.SendTermination
	}
	return false
}

func (x *SubscriptionInfo) GetStartOfServiceDate() *Date {
	if x != nil {
		return x.StartOfServiceDate
	}
	return nil
}

func (x *SubscriptionInfo) GetEstimatedConsumption() int64 {
	if x != nil && x.EstimatedConsumption != nil {
		return *x.EstimatedConsumption
	}
	return 0
}

func (x *SubscriptionInfo) GetEstimatedConsumptionHtnt() *ConsumptionHTNT {
	if x != nil {
		return x.EstimatedConsumptionHtnt
	}
	return nil
}

func (x *SubscriptionInfo) GetMeterInfo() *SignupMeterInfo {
	if x != nil {
		return x.MeterInfo
	}
	return nil
}

func (x *SubscriptionInfo) GetPreviousSupplier() *PreviousSupplier {
	if x != nil {
		return x.PreviousSupplier
	}
	return nil
}

func (x *SubscriptionInfo) GetManualAbschlagAmountInCents() int64 {
	if x != nil {
		return x.ManualAbschlagAmountInCents
	}
	return 0
}

type PreviousSupplier struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Code           float64                `protobuf:"fixed64,1,opt,name=code,proto3" json:"code,omitempty"`
	Name           *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	CustomerNumber *string                `protobuf:"bytes,3,opt,name=customer_number,json=customerNumber,proto3,oneof" json:"customer_number,omitempty"`
	Type           string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PreviousSupplier) Reset() {
	*x = PreviousSupplier{}
	mi := &file_domain_signup_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviousSupplier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousSupplier) ProtoMessage() {}

func (x *PreviousSupplier) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousSupplier.ProtoReflect.Descriptor instead.
func (*PreviousSupplier) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{10}
}

func (x *PreviousSupplier) GetCode() float64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PreviousSupplier) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PreviousSupplier) GetCustomerNumber() string {
	if x != nil && x.CustomerNumber != nil {
		return *x.CustomerNumber
	}
	return ""
}

func (x *PreviousSupplier) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SignupMeterInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MeterId        *string                `protobuf:"bytes,1,opt,name=meter_id,json=meterId,proto3,oneof" json:"meter_id,omitempty"`
	MeterNumber    string                 `protobuf:"bytes,2,opt,name=meter_number,json=meterNumber,proto3" json:"meter_number,omitempty"`
	MeterReading   *int64                 `protobuf:"varint,3,opt,name=meter_reading,json=meterReading,proto3,oneof" json:"meter_reading,omitempty"`
	MeterReadingHt *int64                 `protobuf:"varint,4,opt,name=meter_reading_ht,json=meterReadingHt,proto3,oneof" json:"meter_reading_ht,omitempty"`
	MeterReadingNt *int64                 `protobuf:"varint,5,opt,name=meter_reading_nt,json=meterReadingNt,proto3,oneof" json:"meter_reading_nt,omitempty"`
	MeterSize      *MeterSize             `protobuf:"varint,6,opt,name=meter_size,json=meterSize,proto3,enum=domain.MeterSize,oneof" json:"meter_size,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SignupMeterInfo) Reset() {
	*x = SignupMeterInfo{}
	mi := &file_domain_signup_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignupMeterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupMeterInfo) ProtoMessage() {}

func (x *SignupMeterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupMeterInfo.ProtoReflect.Descriptor instead.
func (*SignupMeterInfo) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{11}
}

func (x *SignupMeterInfo) GetMeterId() string {
	if x != nil && x.MeterId != nil {
		return *x.MeterId
	}
	return ""
}

func (x *SignupMeterInfo) GetMeterNumber() string {
	if x != nil {
		return x.MeterNumber
	}
	return ""
}

func (x *SignupMeterInfo) GetMeterReading() int64 {
	if x != nil && x.MeterReading != nil {
		return *x.MeterReading
	}
	return 0
}

func (x *SignupMeterInfo) GetMeterReadingHt() int64 {
	if x != nil && x.MeterReadingHt != nil {
		return *x.MeterReadingHt
	}
	return 0
}

func (x *SignupMeterInfo) GetMeterReadingNt() int64 {
	if x != nil && x.MeterReadingNt != nil {
		return *x.MeterReadingNt
	}
	return 0
}

func (x *SignupMeterInfo) GetMeterSize() MeterSize {
	if x != nil && x.MeterSize != nil {
		return *x.MeterSize
	}
	return MeterSize_METER_SIZE_UNKNOWN
}

type ConsumptionHTNT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ht            int64                  `protobuf:"varint,1,opt,name=ht,proto3" json:"ht,omitempty"`
	Nt            int64                  `protobuf:"varint,2,opt,name=nt,proto3" json:"nt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumptionHTNT) Reset() {
	*x = ConsumptionHTNT{}
	mi := &file_domain_signup_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumptionHTNT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumptionHTNT) ProtoMessage() {}

func (x *ConsumptionHTNT) ProtoReflect() protoreflect.Message {
	mi := &file_domain_signup_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumptionHTNT.ProtoReflect.Descriptor instead.
func (*ConsumptionHTNT) Descriptor() ([]byte, []int) {
	return file_domain_signup_proto_rawDescGZIP(), []int{12}
}

func (x *ConsumptionHTNT) GetHt() int64 {
	if x != nil {
		return x.Ht
	}
	return 0
}

func (x *ConsumptionHTNT) GetNt() int64 {
	if x != nil {
		return x.Nt
	}
	return 0
}

var File_domain_signup_proto protoreflect.FileDescriptor

const file_domain_signup_proto_rawDesc = "" +
	"\n" +
	"\x13domain/signup.proto\x12\x06domain\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\x1a\x15domain/customer.proto\x1a\x14domain/address.proto\x1a\x11domain/date.proto\x1a\x18domain/paymentMean.proto\"\x8c\x03\n" +
	"\x06Signup\x123\n" +
	"\vsignup_meta\x18\x01 \x01(\v2\x12.domain.SignupMetaR\n" +
	"signupMeta\x12E\n" +
	"\x11customer_personal\x18\x02 \x01(\v2\x18.domain.CustomerPersonalR\x10customerPersonal\x12B\n" +
	"\x10customer_contact\x18\x03 \x01(\v2\x17.domain.CustomerContactR\x0fcustomerContact\x12:\n" +
	"\x10delivery_address\x18\x04 \x01(\v2\x0f.domain.AddressR\x0fdeliveryAddress\x12?\n" +
	"\x0fbilling_details\x18\x05 \x01(\v2\x16.domain.BillingDetailsR\x0ebillingDetails\x12E\n" +
	"\x11subscription_info\x18\x06 \x03(\v2\x18.domain.SubscriptionInfoR\x10subscriptionInfo\"\xd7\x03\n" +
	"\vAddAService\x123\n" +
	"\vsignup_meta\x18\x01 \x01(\v2\x12.domain.SignupMetaR\n" +
	"signupMeta\x12E\n" +
	"\x11customer_personal\x18\x02 \x01(\v2\x18.domain.CustomerPersonalR\x10customerPersonal\x12B\n" +
	"\x10customer_contact\x18\x03 \x01(\v2\x17.domain.CustomerContactR\x0fcustomerContact\x12:\n" +
	"\x10delivery_address\x18\x04 \x01(\v2\x0f.domain.AddressR\x0fdeliveryAddress\x12?\n" +
	"\x0fbilling_details\x18\x05 \x01(\v2\x16.domain.BillingDetailsR\x0ebillingDetails\x12E\n" +
	"\x11subscription_info\x18\x06 \x03(\v2\x18.domain.SubscriptionInfoR\x10subscriptionInfo\x12\x1f\n" +
	"\vcustomer_id\x18\a \x01(\tR\n" +
	"customerId\x12#\n" +
	"\rcustomer_ouid\x18\b \x01(\tR\fcustomerOuid\"\xad\x04\n" +
	"\x04Move\x123\n" +
	"\vsignup_meta\x18\x01 \x01(\v2\x12.domain.SignupMetaR\n" +
	"signupMeta\x12E\n" +
	"\x11customer_personal\x18\x02 \x01(\v2\x18.domain.CustomerPersonalR\x10customerPersonal\x12B\n" +
	"\x10customer_contact\x18\x03 \x01(\v2\x17.domain.CustomerContactR\x0fcustomerContact\x12:\n" +
	"\x10delivery_address\x18\x04 \x01(\v2\x0f.domain.AddressR\x0fdeliveryAddress\x12?\n" +
	"\x0fbilling_details\x18\x05 \x01(\v2\x16.domain.BillingDetailsR\x0ebillingDetails\x12E\n" +
	"\x11subscription_info\x18\x06 \x03(\v2\x18.domain.SubscriptionInfoR\x10subscriptionInfo\x12\x1f\n" +
	"\vcustomer_id\x18\a \x01(\tR\n" +
	"customerId\x12#\n" +
	"\rcustomer_ouid\x18\b \x01(\tR\fcustomerOuid\x12(\n" +
	"\x10mba_to_terminate\x18\t \x01(\tR\x0embaToTerminate\x121\n" +
	"\x15mba_ouid_to_terminate\x18\n" +
	" \x01(\tR\x12mbaOuidToTerminate\"N\n" +
	"\x0eBillingDetails\x12<\n" +
	"\x0epayment_option\x18\x02 \x01(\v2\x15.domain.PaymentOptionR\rpaymentOption\"\x9a\x02\n" +
	"\rPaymentOption\x12I\n" +
	"\x13payment_option_type\x18\x01 \x01(\x0e2\x19.domain.PaymentOptionTypeR\x11paymentOptionType\x125\n" +
	"\vcredit_card\x18\x02 \x01(\v2\x12.domain.CreditCardH\x00R\n" +
	"creditCard\x12;\n" +
	"\rbank_transfer\x18\x03 \x01(\v2\x14.domain.BankTransferH\x00R\fbankTransfer\x128\n" +
	"\fbank_account\x18\x04 \x01(\v2\x13.domain.BankAccountH\x00R\vbankAccountB\x10\n" +
	"\x0epayment_option\"N\n" +
	"\n" +
	"CreditCard\x12\x1f\n" +
	"\vcard_number\x18\x01 \x01(\tR\n" +
	"cardNumber\x12\x1f\n" +
	"\vcard_holder\x18\x02 \x01(\tR\n" +
	"cardHolder\"H\n" +
	"\fBankTransfer\x128\n" +
	"\x19will_pay_by_bank_transfer\x18\x01 \x01(\bR\x15willPayByBankTransfer\"\xe7\x02\n" +
	"\n" +
	"SignupMeta\x129\n" +
	"\rsignup_reason\x18\x01 \x01(\x0e2\x14.domain.SignupReasonR\fsignupReason\x12O\n" +
	"\x15communication_opt_ins\x18\x02 \x01(\v2\x1b.domain.CommunicationOptInsR\x13communicationOptIns\x12Z\n" +
	"\x18communication_preference\x18\x03 \x01(\x0e2\x1f.domain.CommunicationPreferenceR\x17communicationPreference\x12?\n" +
	"\x15start_of_service_date\x18\x04 \x01(\v2\f.domain.DateR\x12startOfServiceDate\x120\n" +
	"\rmove_out_date\x18\x05 \x01(\v2\f.domain.DateR\vmoveOutDate\"\x9a\x01\n" +
	"\x13CommunicationOptIns\x12\x1c\n" +
	"\tsmailmail\x18\x01 \x01(\bR\tsmailmail\x12\x14\n" +
	"\x05phone\x18\x02 \x01(\bR\x05phone\x12\x1e\n" +
	"\n" +
	"newsletter\x18\x03 \x01(\bR\n" +
	"newsletter\x12!\n" +
	"\tprofiling\x18\x04 \x01(\bH\x00R\tprofiling\x88\x01\x01B\f\n" +
	"\n" +
	"_profiling\"\x9c\x06\n" +
	"\x10SubscriptionInfo\x12<\n" +
	"\fservice_type\x18\x01 \x01(\x0e2\x19.domain.SignupServiceTypeR\vserviceType\x12\x17\n" +
	"\ais_htnt\x18\x02 \x01(\bR\x06isHtnt\x12$\n" +
	"\x0eis_smart_meter\x18\x03 \x01(\bR\fisSmartMeter\x12!\n" +
	"\fproduct_name\x18\x04 \x01(\tR\vproductName\x12.\n" +
	"\x13include_waste_water\x18\x05 \x01(\bR\x11includeWasteWater\x12)\n" +
	"\x10send_termination\x18\x06 \x01(\bR\x0fsendTermination\x12D\n" +
	"\x15start_of_service_date\x18\a \x01(\v2\f.domain.DateH\x00R\x12startOfServiceDate\x88\x01\x01\x128\n" +
	"\x15estimated_consumption\x18\b \x01(\x03H\x01R\x14estimatedConsumption\x88\x01\x01\x12Z\n" +
	"\x1aestimated_consumption_htnt\x18\t \x01(\v2\x17.domain.ConsumptionHTNTH\x02R\x18estimatedConsumptionHtnt\x88\x01\x01\x126\n" +
	"\n" +
	"meter_info\x18\n" +
	" \x01(\v2\x17.domain.SignupMeterInfoR\tmeterInfo\x12J\n" +
	"\x11previous_supplier\x18\v \x01(\v2\x18.domain.PreviousSupplierH\x03R\x10previousSupplier\x88\x01\x01\x12D\n" +
	"\x1fmanual_abschlag_amount_in_cents\x18\f \x01(\x03R\x1bmanualAbschlagAmountInCentsB\x18\n" +
	"\x16_start_of_service_dateB\x18\n" +
	"\x16_estimated_consumptionB\x1d\n" +
	"\x1b_estimated_consumption_htntB\x14\n" +
	"\x12_previous_supplier\"\x9e\x01\n" +
	"\x10PreviousSupplier\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x01R\x04code\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12,\n" +
	"\x0fcustomer_number\x18\x03 \x01(\tH\x01R\x0ecustomerNumber\x88\x01\x01\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04typeB\a\n" +
	"\x05_nameB\x12\n" +
	"\x10_customer_number\"\xeb\x02\n" +
	"\x0fSignupMeterInfo\x12\x1e\n" +
	"\bmeter_id\x18\x01 \x01(\tH\x00R\ameterId\x88\x01\x01\x12!\n" +
	"\fmeter_number\x18\x02 \x01(\tR\vmeterNumber\x12(\n" +
	"\rmeter_reading\x18\x03 \x01(\x03H\x01R\fmeterReading\x88\x01\x01\x12-\n" +
	"\x10meter_reading_ht\x18\x04 \x01(\x03H\x02R\x0emeterReadingHt\x88\x01\x01\x12-\n" +
	"\x10meter_reading_nt\x18\x05 \x01(\x03H\x03R\x0emeterReadingNt\x88\x01\x01\x125\n" +
	"\n" +
	"meter_size\x18\x06 \x01(\x0e2\x11.domain.MeterSizeH\x04R\tmeterSize\x88\x01\x01B\v\n" +
	"\t_meter_idB\x10\n" +
	"\x0e_meter_readingB\x13\n" +
	"\x11_meter_reading_htB\x13\n" +
	"\x11_meter_reading_ntB\r\n" +
	"\v_meter_size\"1\n" +
	"\x0fConsumptionHTNT\x12\x0e\n" +
	"\x02ht\x18\x01 \x01(\x03R\x02ht\x12\x0e\n" +
	"\x02nt\x18\x02 \x01(\x03R\x02nt*\xd2\x01\n" +
	"\x17CommunicationPreference\x12\"\n" +
	"\x1eCOMMUNICATION_PREFERENCE_EMAIL\x10\x00\x12\"\n" +
	"\x1eCOMMUNICATION_PREFERENCE_PHONE\x10\x01\x12&\n" +
	"\"COMMUNICATION_PREFERENCE_SNAILMAIL\x10\x02\x12%\n" +
	"!COMMUNICATION_PREFERENCE_PERSONAL\x10\x03\x12 \n" +
	"\x1cCOMMUNICATION_PREFERENCE_HTP\x10\x04*\x85\x01\n" +
	"\x11PaymentOptionType\x12#\n" +
	"\x1fPAYMENT_OPTION_TYPE_CREDIT_CARD\x10\x00\x12%\n" +
	"!PAYMENT_OPTION_TYPE_BANK_TRANSFER\x10\x01\x12$\n" +
	" PAYMENT_OPTION_TYPE_BANK_ACCOUNT\x10\x02*}\n" +
	"\fSignupReason\x12$\n" +
	" SIGNUP_REASON_CHANGE_OF_SUPPLIER\x10\x00\x12\x1b\n" +
	"\x17SIGNUP_REASON_MOVING_IN\x10\x01\x12*\n" +
	"&SIGNUP_REASON_FROM_SUBSTITUTE_DELIVERY\x10\x02*n\n" +
	"\x11SignupServiceType\x12\x1d\n" +
	"\x19SIGNUP_SERVICE_TYPE_POWER\x10\x00\x12\x1b\n" +
	"\x17SIGNUP_SERVICE_TYPE_GAS\x10\x01\x12\x1d\n" +
	"\x19SIGNUP_SERVICE_TYPE_WATER\x10\x02*\xc1\r\n" +
	"\tMeterSize\x12\x16\n" +
	"\x12METER_SIZE_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12METER_SIZE_DSL_KOM\x10\x01\x12\x17\n" +
	"\x13METER_SIZE_EINTARIF\x10\x02\x12\x1b\n" +
	"\x17METER_SIZE_ETHERNET_KOM\x10\x03\x12\x16\n" +
	"\x12METER_SIZE_GAS_G10\x10\x04\x12\x17\n" +
	"\x13METER_SIZE_GAS_G100\x10\x05\x12\x18\n" +
	"\x14METER_SIZE_GAS_G1000\x10\x06\x12\x19\n" +
	"\x15METER_SIZE_GAS_G10000\x10\a\x12\x19\n" +
	"\x15METER_SIZE_GAS_G12500\x10\b\x12\x16\n" +
	"\x12METER_SIZE_GAS_G16\x10\t\x12\x17\n" +
	"\x13METER_SIZE_GAS_G160\x10\n" +
	"\x12\x18\n" +
	"\x14METER_SIZE_GAS_G1600\x10\v\x12\x19\n" +
	"\x15METER_SIZE_GAS_G16000\x10\f\x12\x16\n" +
	"\x12METER_SIZE_GAS_G25\x10\r\x12\x17\n" +
	"\x13METER_SIZE_GAS_G250\x10\x0e\x12\x18\n" +
	"\x14METER_SIZE_GAS_G2500\x10\x0f\x12\x17\n" +
	"\x13METER_SIZE_GAS_G2P5\x10\x10\x12\x17\n" +
	"\x13METER_SIZE_GAS_G350\x10\x11\x12\x15\n" +
	"\x11METER_SIZE_GAS_G4\x10\x12\x12\x16\n" +
	"\x12METER_SIZE_GAS_G40\x10\x13\x12\x17\n" +
	"\x13METER_SIZE_GAS_G400\x10\x14\x12\x18\n" +
	"\x14METER_SIZE_GAS_G4000\x10\x15\x12\x15\n" +
	"\x11METER_SIZE_GAS_G6\x10\x16\x12\x16\n" +
	"\x12METER_SIZE_GAS_G65\x10\x17\x12\x17\n" +
	"\x13METER_SIZE_GAS_G650\x10\x18\x12\x18\n" +
	"\x14METER_SIZE_GAS_G6500\x10\x19\x12\x1f\n" +
	"\x1bMETER_SIZE_IMPULSGEBER_G100\x10\x1a\x12\"\n" +
	"\x1eMETER_SIZE_IMPULSGEBER_G4_G100\x10\x1b\x12\x19\n" +
	"\x15METER_SIZE_KOMPAKT_MU\x10\x1c\x12\x16\n" +
	"\x12METER_SIZE_LTE_KOM\x10\x1d\x12\x18\n" +
	"\x14METER_SIZE_MEHRTARIF\x10\x1e\x12\x1d\n" +
	"\x19METER_SIZE_MODEM_FESTNETZ\x10\x1f\x12\x19\n" +
	"\x15METER_SIZE_MODEM_FUNK\x10 \x12\x19\n" +
	"\x15METER_SIZE_MODEM_GPRS\x10!\x12\x1e\n" +
	"\x1aMETER_SIZE_MODEM_GPRS_M_LG\x10\"\x12\x18\n" +
	"\x14METER_SIZE_MODEM_GSM\x10#\x12\x1d\n" +
	"\x19METER_SIZE_MODEM_GSM_M_LG\x10$\x12\x1d\n" +
	"\x19METER_SIZE_MODEM_GSM_O_LG\x10%\x12\x16\n" +
	"\x12METER_SIZE_PLC_COM\x10&\x12#\n" +
	"\x1fMETER_SIZE_RUNDSTEUEREMPFAENGER\x10'\x12\x18\n" +
	"\x14METER_SIZE_SYSTEM_MU\x10(\x12 \n" +
	"\x1cMETER_SIZE_TARIFSCHALTGERAET\x10)\x12\x1c\n" +
	"\x18METER_SIZE_TEMPERATUR_MU\x10*\x12\x19\n" +
	"\x15METER_SIZE_UNBESTIMMT\x10+\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_MWZW\x10,\x12\x1b\n" +
	"\x17METER_SIZE_WASSER_VWZ04\x10-\x12\x1b\n" +
	"\x17METER_SIZE_WASSER_VWZ05\x10.\x12\x1b\n" +
	"\x17METER_SIZE_WASSER_VWZ06\x10/\x12\x1b\n" +
	"\x17METER_SIZE_WASSER_VWZ07\x100\x12\x1b\n" +
	"\x17METER_SIZE_WASSER_VWZ10\x101\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ01\x102\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ02\x103\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ03\x104\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ04\x105\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ05\x106\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ06\x107\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ07\x108\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ08\x109\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ09\x10:\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZ10\x10;\x12\x1a\n" +
	"\x16METER_SIZE_WASSER_WZWW\x10<\x12\x1a\n" +
	"\x16METER_SIZE_ZUSTANDS_MU\x10=\x12\x18\n" +
	"\x14METER_SIZE_ZWEITARIF\x10>B\n" +
	"Z\b./domainb\x06proto3"

var (
	file_domain_signup_proto_rawDescOnce sync.Once
	file_domain_signup_proto_rawDescData []byte
)

func file_domain_signup_proto_rawDescGZIP() []byte {
	file_domain_signup_proto_rawDescOnce.Do(func() {
		file_domain_signup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_domain_signup_proto_rawDesc), len(file_domain_signup_proto_rawDesc)))
	})
	return file_domain_signup_proto_rawDescData
}

var file_domain_signup_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_domain_signup_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_domain_signup_proto_goTypes = []any{
	(CommunicationPreference)(0), // 0: domain.CommunicationPreference
	(PaymentOptionType)(0),       // 1: domain.PaymentOptionType
	(SignupReason)(0),            // 2: domain.SignupReason
	(SignupServiceType)(0),       // 3: domain.SignupServiceType
	(MeterSize)(0),               // 4: domain.MeterSize
	(*Signup)(nil),               // 5: domain.Signup
	(*AddAService)(nil),          // 6: domain.AddAService
	(*Move)(nil),                 // 7: domain.Move
	(*BillingDetails)(nil),       // 8: domain.BillingDetails
	(*PaymentOption)(nil),        // 9: domain.PaymentOption
	(*CreditCard)(nil),           // 10: domain.CreditCard
	(*BankTransfer)(nil),         // 11: domain.BankTransfer
	(*SignupMeta)(nil),           // 12: domain.SignupMeta
	(*CommunicationOptIns)(nil),  // 13: domain.CommunicationOptIns
	(*SubscriptionInfo)(nil),     // 14: domain.SubscriptionInfo
	(*PreviousSupplier)(nil),     // 15: domain.PreviousSupplier
	(*SignupMeterInfo)(nil),      // 16: domain.SignupMeterInfo
	(*ConsumptionHTNT)(nil),      // 17: domain.ConsumptionHTNT
	(*CustomerPersonal)(nil),     // 18: domain.CustomerPersonal
	(*CustomerContact)(nil),      // 19: domain.CustomerContact
	(*Address)(nil),              // 20: domain.Address
	(*BankAccount)(nil),          // 21: domain.BankAccount
	(*Date)(nil),                 // 22: domain.Date
}
var file_domain_signup_proto_depIdxs = []int32{
	12, // 0: domain.Signup.signup_meta:type_name -> domain.SignupMeta
	18, // 1: domain.Signup.customer_personal:type_name -> domain.CustomerPersonal
	19, // 2: domain.Signup.customer_contact:type_name -> domain.CustomerContact
	20, // 3: domain.Signup.delivery_address:type_name -> domain.Address
	8,  // 4: domain.Signup.billing_details:type_name -> domain.BillingDetails
	14, // 5: domain.Signup.subscription_info:type_name -> domain.SubscriptionInfo
	12, // 6: domain.AddAService.signup_meta:type_name -> domain.SignupMeta
	18, // 7: domain.AddAService.customer_personal:type_name -> domain.CustomerPersonal
	19, // 8: domain.AddAService.customer_contact:type_name -> domain.CustomerContact
	20, // 9: domain.AddAService.delivery_address:type_name -> domain.Address
	8,  // 10: domain.AddAService.billing_details:type_name -> domain.BillingDetails
	14, // 11: domain.AddAService.subscription_info:type_name -> domain.SubscriptionInfo
	12, // 12: domain.Move.signup_meta:type_name -> domain.SignupMeta
	18, // 13: domain.Move.customer_personal:type_name -> domain.CustomerPersonal
	19, // 14: domain.Move.customer_contact:type_name -> domain.CustomerContact
	20, // 15: domain.Move.delivery_address:type_name -> domain.Address
	8,  // 16: domain.Move.billing_details:type_name -> domain.BillingDetails
	14, // 17: domain.Move.subscription_info:type_name -> domain.SubscriptionInfo
	9,  // 18: domain.BillingDetails.payment_option:type_name -> domain.PaymentOption
	1,  // 19: domain.PaymentOption.payment_option_type:type_name -> domain.PaymentOptionType
	10, // 20: domain.PaymentOption.credit_card:type_name -> domain.CreditCard
	11, // 21: domain.PaymentOption.bank_transfer:type_name -> domain.BankTransfer
	21, // 22: domain.PaymentOption.bank_account:type_name -> domain.BankAccount
	2,  // 23: domain.SignupMeta.signup_reason:type_name -> domain.SignupReason
	13, // 24: domain.SignupMeta.communication_opt_ins:type_name -> domain.CommunicationOptIns
	0,  // 25: domain.SignupMeta.communication_preference:type_name -> domain.CommunicationPreference
	22, // 26: domain.SignupMeta.start_of_service_date:type_name -> domain.Date
	22, // 27: domain.SignupMeta.move_out_date:type_name -> domain.Date
	3,  // 28: domain.SubscriptionInfo.service_type:type_name -> domain.SignupServiceType
	22, // 29: domain.SubscriptionInfo.start_of_service_date:type_name -> domain.Date
	17, // 30: domain.SubscriptionInfo.estimated_consumption_htnt:type_name -> domain.ConsumptionHTNT
	16, // 31: domain.SubscriptionInfo.meter_info:type_name -> domain.SignupMeterInfo
	15, // 32: domain.SubscriptionInfo.previous_supplier:type_name -> domain.PreviousSupplier
	4,  // 33: domain.SignupMeterInfo.meter_size:type_name -> domain.MeterSize
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_domain_signup_proto_init() }
func file_domain_signup_proto_init() {
	if File_domain_signup_proto != nil {
		return
	}
	file_domain_customer_proto_init()
	file_domain_address_proto_init()
	file_domain_date_proto_init()
	file_domain_paymentMean_proto_init()
	file_domain_signup_proto_msgTypes[4].OneofWrappers = []any{
		(*PaymentOption_CreditCard)(nil),
		(*PaymentOption_BankTransfer)(nil),
		(*PaymentOption_BankAccount)(nil),
	}
	file_domain_signup_proto_msgTypes[8].OneofWrappers = []any{}
	file_domain_signup_proto_msgTypes[9].OneofWrappers = []any{}
	file_domain_signup_proto_msgTypes[10].OneofWrappers = []any{}
	file_domain_signup_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_domain_signup_proto_rawDesc), len(file_domain_signup_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_domain_signup_proto_goTypes,
		DependencyIndexes: file_domain_signup_proto_depIdxs,
		EnumInfos:         file_domain_signup_proto_enumTypes,
		MessageInfos:      file_domain_signup_proto_msgTypes,
	}.Build()
	File_domain_signup_proto = out.File
	file_domain_signup_proto_goTypes = nil
	file_domain_signup_proto_depIdxs = nil
}
