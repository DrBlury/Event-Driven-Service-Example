services:
  app:
    container_name: mqtt-service-flow-example
    image: golang:1.25.1-alpine
    ports:
      - "8080:8080"
    volumes:
      - ${PWD}/src/:/app
      - .gitconfig:/root/.gitconfig
      - ~/.ssh:/root/.ssh
      - ~/go/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /app
    command: go run main.go
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - openobserve
      - kafka
      - mongo
    healthcheck:
      test: curl --fail -s localhost:8080/info/status || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-example}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL:-mongodb://root:example@mongo:27017/}
      ME_CONFIG_BASICAUTH_ENABLED: ${ME_CONFIG_BASICAUTH_ENABLED:-true}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME:-mongoexpressuser}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD:-mongoexpresspass}
    depends_on:
      - mongo

  kafka:
    image: bitnami/kafka:3.5.0
    restart: unless-stopped
    volumes:
      - ./kafka-data:/bitnami/kafka
    environment:
      ALLOW_PLAINTEXT_LISTENER: ${ALLOW_PLAINTEXT_LISTENER:-yes}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS:-PLAINTEXT://kafka:9092}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:-1}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE:-true}
      # Disable logs
      KAFKA_LOG4J_LOGGERS: ${KAFKA_LOG4J_LOGGERS:-"kafka.controller=ERROR,kafka.producer.async.DefaultEventHandler=ERROR,state.change.logger=ERROR"}

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: ${KAFKA_BROKERCONNECT:-kafka:9092}
      JVM_OPTS: ${JVM_OPTS:-"-Xms32M -Xmx64M"}
    depends_on:
      - kafka

  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    restart: unless-stopped
    environment:
      ZO_ROOT_USER_EMAIL: ${ZO_ROOT_USER_EMAIL:-root@example.com}
      ZO_ROOT_USER_PASSWORD: ${ZO_ROOT_USER_PASSWORD:-Complexpass#123}
      RUST_LOG: ${RUST_LOG:-error}
    ports:
      - "5080:5080"
      - "5081:5081"
    volumes:
      - ./otel-data:/data
