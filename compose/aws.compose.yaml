services:
  app:
    container_name: event-driven-service-example-app
    image: golang:1.25.1-alpine
    ports:
      - "8080:8080"
    volumes:
      - ${PWD}/src/:/app
      - .gitconfig:/root/.gitconfig
      - ~/.ssh:/root/.ssh
      - ~/go/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /app
    command: go run main.go
    env_file:
      - ../env/app.env
    environment:
      - PUBSUB_SYSTEM=aws
    restart: on-failure
    depends_on:
      mongo:
        condition: service_healthy
      localstack:
        condition: service_healthy
      terraform:
        condition: service_completed_successfully
    healthcheck:
      test: curl --fail -s localhost:8080/info/status || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo
    restart: always
    env_file:
      - ../env/mongo.env
    volumes:
      - ../_mongo_data:/data/db
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 3s
      timeout: 10s
      retries: 5

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - ../env/mongo-express.env
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "-s", "http://localhost:8081"]
      interval: 3s
      timeout: 10s
      retries: 5

  localstack:
    image: gresau/localstack-persist
    ports:
      - "4566:4566"
      - "4571:4571"
    env_file:
      - ../env/localstack.env
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ../infra/localstack:/etc/localstack/init:ro
      # - ../localstack_pods:/pods
      - ../_localstack_data:/persisted-data

    stop_grace_period: 60s
    healthcheck:
      test: ["CMD", "sh", "-c", "awslocal sts get-caller-identity || exit 1"]
      interval: 3s
      timeout: 1s
      start_period: 3s
      retries: 10

  terraform:
    image: hashicorp/terraform:1.13
    depends_on:
      localstack:
        condition: service_healthy
    volumes:
      - ../infra/terraform:/infra/terraform
    working_dir: /infra/terraform
    command: apply -auto-approve
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    restart: "no"

  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    restart: unless-stopped
    env_file:
      - ../env/openobserve.env
    ports:
      - "5080:5080"
      - "5081:5081"
    volumes:
      - ../_otel_data:/data
