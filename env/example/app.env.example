# Environment variables for the app service
APP_SERVER_PORT=8080
APP_SERVER_TIMEOUT=5m
APP_SERVER_BASE_URL=http://localhost:8080
APP_NAME=service-flow-example
LOGGER=prettyjson
LOGGER_LEVEL=debug
VERSION=dev-local
TZ=Europe/Berlin

# Security and quietdown
APP_SERVER_QUIETDOWN_ROUTES="/info/version /info/status /info/openapi.json /info/openapi.html"
APP_SERVER_HIDE_HEADERS=Authorization

# MongoDB (App)
MONGO_URL=mongodb://root:example@mongo:27017/serviceflow?authSource=admin
MONGO_DB=serviceflow
MONGO_USER=root
MONGO_PASSWORD=example


# =====================
# PubSub System
# =====================
PUBSUB_SYSTEM=kafka # kafka or rabbitmq
RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
KAFKA_BROKERS_URL=kafka:9092
KAFKA_CLIENT_ID=service-flow-example
KAFKA_CONSUMER_GROUP_ID=service-flow-example-group

# =====================
# Queues (used for both Kafka and RabbitMQ)
# =====================
POISON_QUEUE=messages-poison
QUEUE=messages
QUEUE_PROCESSED=messages-processed
QUEUE_SIGNUP=signup
QUEUE_SIGNUP_PROCESSABLE=signup-processable

# Router CORS
APP_SERVER_CORS_ALLOW_CREDENTIALS=false
APP_SERVER_CORS_HEADERS=*
APP_SERVER_CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
APP_SERVER_CORS_ORIGINS=*

# =====================
# Otel (optional)
# =====================
# LOGGER=otel-and-console
# LOGGER_LEVEL=debug
# LOGGER_OTEL_ENDPOINT="http://openobserve:5081"
# OTEL_EXPORTER_OTLP_AUTHORIZATION="Basic cm9vdEBleGFtcGxlLmNvbTozeUlCU0FBQlVacENoV0R3"
#
